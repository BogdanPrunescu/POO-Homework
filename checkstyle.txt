Starting audit...
[ERROR] C:\Users\a\Desktop\tema\.\src\Environment\Enviroment.java:1:9: Name 'Environment' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\a\Desktop\tema\.\src\Environment\Enviroment.java:5:16: Variable 'affectedRow' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\a\Desktop\tema\.\src\Environment\Enviroment.java:6:10: Name 'Action' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\a\Desktop\tema\.\src\Environment\Enviroment.java:6:19: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\a\Desktop\tema\.\src\Environment\Enviroment.java:6:20: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:1:9: Name 'fileio_copy' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:3:8: Unused import - com.fasterxml.jackson.annotation.JsonInclude. [UnusedImports]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:19:20: Parameter actionsInput should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:34:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:38:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:38:28: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:42:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getHandIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getHandIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:46:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setHandIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setHandIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:46:28: Parameter handIdx should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:50:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getCardAttacker' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getCardAttacker' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:54:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setCardAttacker' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setCardAttacker' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:54:33: Parameter cardAttacker should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:58:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getCardAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getCardAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:62:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setCardAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setCardAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:62:33: Parameter cardAttacked should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:66:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getAffectedRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getAffectedRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:70:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setAffectedRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setAffectedRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:70:32: Parameter affectedRow should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:74:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:78:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:78:30: Parameter playerIdx should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:82:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getX' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getX' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:86:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setX' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setX' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:86:22: Parameter x should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:90:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getY' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getY' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:94:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setY' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setY' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Actions.java:94:22: Parameter y should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Card.java:1:9: Name 'fileio_copy' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Card.java:16:17: Parameter card should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Card.java:25:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Card.java:29:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Card.java:29:25: Parameter mana should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Card.java:33:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Card.java:37:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Card.java:37:33: Parameter attackDamage should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Card.java:41:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Card.java:45:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Card.java:45:27: Parameter health should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Card.java:49:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Card.java:53:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Card.java:53:32: Parameter description should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Card.java:57:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Card.java:61:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Card.java:61:27: Parameter colors should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Card.java:65:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Card.java:69:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Card.java:69:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Decks.java:1:9: Name 'fileio_copy' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Decks.java:14:18: Parameter decksInput should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Decks.java:20:35: Name 'decks_cnt' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Decks.java:29:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'getNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'getNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Decks.java:33:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'setNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'setNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Decks.java:33:34: Parameter nrCardsInDeck should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Decks.java:37:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'getNrDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'getNrDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Decks.java:41:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'setNrDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'setNrDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Decks.java:41:28: Parameter nrDecks should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Decks.java:45:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'getDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'getDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Decks.java:49:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'setDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'setDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Decks.java:49:26: Parameter decks should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Game.java:1:9: Name 'fileio_copy' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Game.java:12:17: Parameter gameInput should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Game.java:14:27: 'actions' hides a field. [HiddenField]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Game.java:19:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getStartGame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getStartGame' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Game.java:23:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'setStartGame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'setStartGame' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Game.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Game.java:27:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Game.java:31:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'setActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'setActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\Game.java:31:28: Parameter actions should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:1:9: Name 'fileio_copy' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:3:8: Unused import - fileio.CardInput. [UnusedImports]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:14:22: Parameter startGameInput should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:24:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'getPlayerOneDeckIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'getPlayerOneDeckIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:28:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'setPlayerOneDeckIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'setPlayerOneDeckIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:28:37: Parameter playerOneDeckIdx should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:32:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'getPlayerTwoDeckIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'getPlayerTwoDeckIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:36:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'setPlayerTwoDeckIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'setPlayerTwoDeckIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:36:37: Parameter playerTwoDeckIdx should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:40:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'getShuffleSeed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'getShuffleSeed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:44:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'setShuffleSeed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'setShuffleSeed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:44:32: Parameter shuffleSeed should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:48:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'getPlayerOneHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'getPlayerOneHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:52:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'setPlayerOneHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'setPlayerOneHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:52:34: Parameter playerOneHero should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:56:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'getPlayerTwoHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'getPlayerTwoHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:60:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'setPlayerTwoHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'setPlayerTwoHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:60:34: Parameter playerTwoHero should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:64:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'getStartingPlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'getStartingPlayer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:68:5: Class 'StartGame' looks like designed for extension (can be subclassed), but the method 'setStartingPlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StartGame' final or making the method 'setStartingPlayer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\a\Desktop\tema\.\src\fileio_copy\StartGame.java:68:35: Parameter startingPlayer should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\main\Main.java:18:8: Unused import - Manager.AppManager. [UnusedImports]
[ERROR] C:\Users\a\Desktop\tema\.\src\main\Main.java:20:19: Using the '.*' form of import should be avoided - fileio_copy.*. [AvoidStarImport]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\AppManager.java:1:9: Name 'Manager' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\AppManager.java:4:8: Unused import - fileio.DecksInput. [UnusedImports]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\AppManager.java:10:19: Using the '.*' form of import should be avoided - fileio_copy.*. [AvoidStarImport]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\AppManager.java:12:1: Class AppManager should be declared as final. [FinalClass]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\AppManager.java:14:30: Variable 'instance' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\AppManager.java:15:26: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\AppManager.java:15:27: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\AppManager.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\AppManager.java:25:26: Parameter input should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\AppManager.java:25:32: 'input' hides a field. [HiddenField]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\AppManager.java:25:39: Parameter output should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\AppManager.java:25:49: 'output' hides a field. [HiddenField]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\AppManager.java:30:24: Name 'games_elem' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\GameManager.java:1:9: Name 'Manager' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\GameManager.java:4:19: Using the '.*' form of import should be avoided - fileio_copy.*. [AvoidStarImport]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\GameManager.java:11:1: Class GameManager should be declared as final. [FinalClass]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\GameManager.java:13:31: Variable 'instance' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\GameManager.java:14:27: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\GameManager.java:14:28: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\GameManager.java:16:32: Variable 'gameDecks' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\GameManager.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\GameManager.java:18:27: Parameter game should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\GameManager.java:18:38: Parameter playerOneDecks should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\GameManager.java:19:27: Parameter playerTwoDecks should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\GameManager.java:19:49: Parameter output should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\GameManager.java:38:13: switch without "default" clause. [MissingSwitchDefault]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\GameManager.java:40:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\GameManager.java:42:21: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\a\Desktop\tema\.\src\Manager\RoundManager.java:1:9: Name 'Manager' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Berserker.java:1:9: Name 'Minion' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Berserker.java:5:38: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Berserker.java:6:22: Parameter mana should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Berserker.java:6:32: Parameter health should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Berserker.java:7:22: Parameter attackDamage should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Berserker.java:7:40: Parameter description should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Berserker.java:8:22: Parameter colors should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Berserker.java:8:37: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Discipline.java:1:9: Name 'Minion' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Goliath.java:1:9: Name 'Minion' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Goliath.java:5:36: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Goliath.java:7:20: Parameter mana should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Goliath.java:7:30: Parameter health should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Goliath.java:8:20: Parameter attackDamage should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Goliath.java:8:38: Parameter description should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Goliath.java:9:20: Parameter colors should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Goliath.java:9:35: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Goliath.java:9:59: Parameter hasAbility should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:1:9: Name 'Minion' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:7:16: Variable 'mana' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:8:16: Variable 'health' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:9:16: Variable 'attackDamage' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:11:19: Variable 'description' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:12:19: Variable 'colors' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:13:30: Variable 'name' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:15:20: Variable 'hasAttacked' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:16:20: Variable 'isFrozen' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:17:20: Variable 'hasAbility' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:19:17: Name 'Action' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:19:26: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:19:27: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:20:17: Name 'Exceptions' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:24:19: Parameter mana should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:24:29: Parameter health should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:24:41: Parameter attackDamage should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:25:19: Parameter description should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:25:39: Parameter colors should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:26:19: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Minion.java:26:43: Parameter hasAbility should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Miraj.java:1:9: Name 'Minion' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Sentinel.java:1:9: Name 'Minion' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Sentinel.java:5:37: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Sentinel.java:6:21: Parameter mana should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Sentinel.java:6:31: Parameter health should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Sentinel.java:7:21: Parameter attackDamage should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Sentinel.java:7:39: Parameter description should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Sentinel.java:8:21: Parameter colors should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Sentinel.java:8:36: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\TheCursedOne.java:1:9: Name 'Minion' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\TheRipper.java:1:9: Name 'Minion' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\a\Desktop\tema\.\src\Minion\Warden.java:1:9: Name 'Minion' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
Audit done.
Checkstyle ends with 178 errors.
